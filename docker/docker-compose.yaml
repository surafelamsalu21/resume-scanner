version: "3.8"

services:
     # Flask Backend Application
     backend:
          build:
               context: ..
               dockerfile: docker/Dockerfile
          container_name: resume_ai_backend
          ports:
               - "${PORT:-8081}:5000"
          environment:
               - FLASK_APP=${FLASK_APP:-run.py}
               - FLASK_ENV=${FLASK_ENV:-production}
               - SECRET_KEY=${SECRET_KEY}
               - DATABASE_URL=postgresql://${POSTGRES_USER:-resume_user}:${POSTGRES_PASSWORD:-resume_password_2024}@${POSTGRES_HOST:-31.220.31.112}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-resume_ai}
               - POSTGRES_HOST=${POSTGRES_HOST:-31.220.31.112}
               - POSTGRES_PORT=${POSTGRES_PORT:-5432}
               - POSTGRES_DB=${POSTGRES_DB:-resume_ai}
               - POSTGRES_USER=${POSTGRES_USER:-resume_user}
               - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-resume_password_2024}
               - JWT_SECRET_KEY=${JWT_SECRET_KEY}
               - OPENAI_API_KEY=${OPENAI_API_KEY}
               - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
               - UPLOAD_FOLDER=${UPLOAD_FOLDER:-uploads}
               - MAX_CONTENT_LENGTH=${MAX_CONTENT_LENGTH:-10485760}
               - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
               - DEBUG=${DEBUG:-False}
               - LOG_LEVEL=${LOG_LEVEL:-INFO}
               - CORS_ORIGINS=${CORS_ORIGINS:-*}
          volumes:
               # Only mount uploads directory, not entire source code for production
               - resume_ai_uploads:/app/uploads
               - ../app/static:/app/app/static:ro
          depends_on:
               - redis
          networks:
               - resume_ai_network
          restart: unless-stopped
          healthcheck:
               test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
               interval: 30s
               timeout: 10s
               retries: 3
               start_period: 40s

     # Redis for Caching and Session Management
     redis:
          image: redis:7-alpine
          container_name: resume_ai_redis
          ports:
               - "6380:6379"
          volumes:
               - redis_data:/data
          networks:
               - resume_ai_network
          restart: unless-stopped
          healthcheck:
               test: ["CMD", "redis-cli", "ping"]
               interval: 10s
               timeout: 3s
               retries: 5
          command: >
               redis-server
               --appendonly yes
               --maxmemory 128mb
               --maxmemory-policy allkeys-lru

     # pgAdmin for Database Management (Development Only)
     pgadmin:
          image: dpage/pgadmin4
          container_name: resume_ai_pgadmin
          environment:
               - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
               - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
          ports:
               - "5050:80"
          depends_on:
               - db
          networks:
               - resume_ai_network
          restart: unless-stopped
          profiles:
               - dev

volumes:
     redis_data:
          name: resume_ai_redis_data
          driver: local
     resume_ai_uploads:
          name: resume_ai_uploads
          driver: local

networks:
     resume_ai_network:
          name: resume_ai_network
          driver: bridge
